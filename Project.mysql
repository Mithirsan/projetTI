DROP database IF EXISTS project;

CREATE database project CHARACTER SET = 'utf8';

USE project;

CREATE TABLE IF NOT EXISTS users(
username VARCHAR[20] NOT NULL,
password VARCHAR[200] NOT NULL,
mail VARCHAR[80] NOT NULL,
birthDate DATE NOT NULL,
firstName VARCHAR[40] NOT NULL,
lastName VARCHAR[40] NOT NULL,
image VARCHAR[50],
phone VARCHAR[16],
bankAccount CHAR[19],S
isAdmin BOOLEAN NOT NULL DEFAULT FALSE,
PRIMARY KEY(username, mail),
) engine = innodb;

CREATE TABLE IF NOT EXISTS rents(
id NUMERIC NOT NULL auto_increment,
username VARCHAR[20] NOT NULL,
mail VARCHAR[80] NOT NULL,
num VARCHAR[5] NOT NULL,
address VARCHAR[80] NOT NULL,
cp VARCHAR[10] NOT NULL,
location VARCHAR[80] NOT NULL,
country VARCHAR[50] NOT NULL,
price NUMERIC[7, 2] NOT NULL,
isLocated BOOLEAN NOT NULL DEFAULT FALSE,
dateBegin DATE,
dateEnd DATE,
rooms NUMERIC NOT NULL,
animals BOOLEAN,
PRIMARY KEY(id)
KEY(username)
) engine = innodb;

ALTER TABLE rents ADD CONSTRAINT fkusersrents
FOREIGN KEY(username, mail) REFERENCES users(username);

--Sign up
INSERT INTO users(username, password, mail, birthDate, firstName, lastName) VALUES
('example', 'example', 'example@student.helha.be', '15/03/1993', 'Jean', 'Dubuisson');			--if wrong("username / mail already exists")

--Sign up with phone number
INSERT INTO users(username, password, mail, birthDate, firstName, lastName, phone) VALUES
('example', 'example', 'example@student.helha.be', '15/03/1993', 'Melissa', 'Perlipopette' '065355022');			--if wrong("username / mail already exists")

--Sign up with bank account
INSERT INTO users(username, password, mail, birthDate, firstName, lastName, phone, bankAccount) VALUES
('example', 'example', 'example@student.helha.be', '15/03/1993', 'Pierre', 'Kiroule', '065355022', 'BE12-3456-1234-5678');			--if wrong("username / mail already exists")

--add image
UPDATE users SET image = 'image' where username like 'username';		--Changer d'image

--Add Location
INSERT INTO locations(username, num, address, cp, location, country, rooms, price) VALUES
('example',1, 'example street', '7000', 'Mons', 'Belgium', 3, 66.66);

-- login
SELECT username, password, mail FROM users WHERE username LIKE 'example' OR mail LIKE 'example@student.helha.be';			--if wrong password, error ("wrong password)

--Set location
-- if located
UPDATE rents SET isLocated = true WHERE id == 1;
UPDATE rents SET dateBegin = 'implements date' WHERE id == 1;
UPDATE rents SET dateEnd = 'implements date' WHERE id == 1 IF('implements date' > dateBegin)		--id donné par php

--Short version
UPDATE rents SET isLocated = true,
dateBegin = 'implements beginDate',
dateEnd = 'implements endDate' WHERE id == 1 IF('endDate' > 'beginDate')
WHERE id == 1;		--id donné par php

-- if ended location
UPDATE rents SET isLocated = true, dateBegin = null, dateEnd = null WHERE id == 1;			--id donné par php

--tri par cp
SELECT(*) FROM rents WHERE cp LIKE 'cp%';			--cp donné par php

--tri par pays
SELECT(*) FROM rents WHERE country LIKE 'country%';		--Pays donné par php, on trie en direct au moment ou le gars écrit donc on prend toutes les lettres après

--tri par localité
SELECT(*) FROM rents WHERE localite LIKE 'localite%';		--Ville donnée par php, on trie en direct ...

--par utilisateur
SELECT(*) FROM rents WHERE username LIKE 'username%';		--username donné par php, on trie en direct

--par nombre de chambres
SELECT (*) FROM rents WHERE rooms >= 2			--Nombre de chambes donné par php

--Fusionner les requêtes pour un tri multiple



